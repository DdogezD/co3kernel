name: co3kernel_build
on:
  workflow_dispatch:
    inputs:
      KERNEL_NAME:
        description: "自定义 Linux version 字符串"
        required: true
        default: '-android13-8-0-01144-g8e1bc9d233a1'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "DogEZ"
          git config --global user.email "DdogezD@gmail.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/sm8550 -m oneplus_open_v.xml --depth=1
          repo sync
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: Prepare co3kernel
        run: |
          cd kernel_workspace
          git clone https://github.com/DdogezD/co3kernel.git

      - name: co3kernel/ upgrade lz4 v1.10.0
        run: |
          cd kernel_workspace/kernel_platform/common
          rm -f lib/lz4/lz4_compress.c
          rm -f lib/lz4/lz4_decompress.c
          rm -f lib/lz4/lz4defs.h
          rm -f lib/lz4/lz4hc_compress.c
          mv fs/f2fs/lz4armv8 lib/lz4/
          cp -r ../../co3kernel/patches/lz4_1.10.0_patches/lz4/* ./lib/lz4/
          cp -r ../../co3kernel/patches/lz4_1.10.0_patches/include/linux/* ./include/linux/
          cp ../../co3kernel/patches/lz4_1.10.0_patches/lz4_1.10.0.patch ./
          patch -p1 < lz4_1.10.0.patch || true

      - name: co3kernel/ sync to standard zstd kernel API
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../co3kernel/patches/zstd_1.5.7_patches/*.patch ./
          patch -p1 -R < revert_71c36788.patch || true
          patch -p1 < 1.patch || true
          patch -p1 < 2.patch || true
          patch -p1 < 3.patch || true
          patch -p1 < 4.patch || true
          patch -p1 < 5.patch || true
          patch -p1 < 6.patch || true

      - name: co3kernel/ upgrade zstd v1.5.7
        run: |
          cd kernel_workspace
          git clone --branch v1.5.7 https://github.com/facebook/zstd.git
          cd zstd/contrib/linux-kernel
          make libzstd
          make import LINUX=$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/common

      - name: co3kernel/ zstd adapt for GKI
        run: |
          cd kernel_workspace/kernel_platform/common
          patch -p1 < 7.patch || true
          patch -p1 < 8.patch || true
          patch -p1 < 9.patch || true
          patch -p1 < 10.patch || true
          patch -p1 < 11.patch || true
          patch -p1 < 12.patch || true
          patch -p1 < default_level.patch || true
          patch -p1 < fix_zstd_makefile.patch || true
          patch -p1 < zstd_symbol.patch || true

      - name: co3kernel/ add kernel patches
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../co3kernel/patches/*.patch ./
          patch -p1 < scope_min_manual_hooks_v1.5.patch || true
          patch -p1 < westwood_remix.patch || true
          patch -p1 < TCP_NODELAY.patch || true
          patch -p1 < opt_for_sm8550.patch || true
          patch -p1 < polly_support.patch || true
          patch -p1 < polly_flags.patch || true
          patch -p1 < lazy_RCU_and_disable_IKHEADERS.patch || true
          patch -p1 < disable_KFENCE_UBSAN.patch || true
          patch -p1 < do_not_security.patch || true
          patch -p1 < noinline_do_freezer_trap.patch || true
          patch -p1 < nintendo_ff_support.patch || true
          patch -p1 < xiaomi_zram_opt.patch || true
          patch -p1 < opt_memcpy.patch || true
          patch -p1 < opt_memmove.patch || true
          patch -p1 < opt_memset.patch || true
          patch -p1 < cpuidle_dont_rtn.patch || true
          patch -p1 < cpuidle_rej_entry.patch || true
          patch -p1 < mm_dont_reserve.patch || true
          patch -p1 < disable_CACHE_HOT_BUDDY.patch || true
          patch -p1 < less_migra_cost.patch || true
          patch -p1 < fair_pelt_16ms.patch || true
          patch -p1 < fs_reduce_cache.patch || true
          patch -p1 < fs_ali_8b.patch || true
          patch -p1 < selinux_rm_audit_deps.patch || true
          patch -p1 < selinux_avoid_dyna_mem_allo.patch || true
          patch -p1 < blk_disable_iostats.patch || true
          patch -p1 < do_not_collect_iostats.patch || true
          patch -p1 < idle_mem_barrier.patch || true
          patch -p1 < skip_barrier_ttwu.patch || true
          patch -p1 < clear_page_ali_16b.patch || true
          patch -p1 < teo_avoid_stop_tick.patch || true
          patch -p1 < teo_do_not_call.patch || true
          patch -p1 < teo_skip_call.patch || true
          patch -p1 < teo_gather_stats.patch || true
          patch -p1 < teo_avoid_assign.patch || true
          patch -p1 < teo_rm_recent_interc.patch || true
          patch -p1 < teo_dont_count_non_ex.patch || true
          patch -p1 < menu_skip_tick_nohz.patch || true
          patch -p1 < menu_cleanup.patch || true
          patch -p1 < menu_fix_typo.patch || true
          patch -p1 < menu_rm_iowait_influ.patch || true
          patch -p1 < pwr_wq_treewide.patch || true
          patch -p1 < pwr_wq_rcu_fix.patch || true
          patch -p1 < drm_allow_null.patch || true
          patch -p1 < no_drm_dbg.patch || true
          patch -p1 < no_psi_dbg.patch || true
          patch -p1 < disable_self-hosted_dbg.patch || true
          patch -p1 < always_use_LSE_atomic.patch || true
          patch -p1 < faster_integer_sqrt.patch || true
          patch -p1 < alarmtimer_dont_fail.patch || true
          patch -p1 < vmalloc1.patch || true
          patch -p1 < vmalloc2.patch || true
          patch -p1 < vmalloc3.patch || true
          patch -p1 < vmalloc4.patch || true
          patch -p1 < vmalloc5.patch || true
          patch -p1 < vmalloc6.patch || true
          patch -p1 < vmalloc7.patch || true
          patch -p1 < temp_upd_860.patch || true

      - name: Cleanup co3kernel files
        run: |
          rm -rf kernel_workspace/co3kernel

      - name: Add KernelSU Next v1.1.0
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -s v1.1.0
          cd ./KernelSU-Next
          MAKE_FILE="kernel/Makefile"
          DEFAULT_VERSION=11998
          KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))
          sed -i "s/^DKSU_VERSION.*/DKSU_VERSION=${KSU_VERSION}/" "${MAKE_FILE}"

      - name: Add defconfigs
        run: |
          cd kernel_workspace/kernel_platform
          echo 'CONFIG_LLVM_POLLY=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_KPROBES_HOOK=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_TMPFS_XATTR=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_JOYSTICK_XPAD_FF=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_JOYSTICK_XPAD_LEDS=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_NINTENDO_FF=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_TCP_CONG_ADVANCED=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_TCP_CONG_HTCP=n' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_TCP_CONG_BIC=n' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_TCP_CONG_BBR=n' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_TCP_CONG_WESTWOOD=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_DEFAULT_WESTWOOD=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_NET_SCH_DEFAULT=y' >> ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_DEFAULT_FQ_CODEL=y' >> ./common/arch/arm64/configs/gki_defconfig
          sed -i '/^CC_OPTIMIZE_FOR_PERFORMANCE=/d' ./common/arch/arm64/configs/gki_defconfig
          echo 'CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3=y' >> ./common/arch/arm64/configs/gki_defconfig
          sed -i '/^[[:space:]]*depends on[[:space:]]\+ARC$/d' ./common/init/Kconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Spoof Linux version
        run: |
          cd kernel_workspace/kernel_platform
          sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl

      - name: Build kernel
        run: |
          cd kernel_workspace
          LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh kalama gki

      - name: Prepare Kernel
        run: |
         cp kernel_workspace/kernel_platform/out/msm-kernel-kalama-gki/dist/Image ./kernel_workspace/kernel

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
         name: co3kernel
         path: kernel_workspace/kernel
